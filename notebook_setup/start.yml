---
#
# Restart instances specified by tag
#
  - name: Start all stopped EC2 Instances
    hosts: local
    connection: local
    gather_facts: False
    pre_tasks:
     - include_vars: "{{item}}"
       with_items:
         - vars/ec2.yml
    tasks:
      - name: Find all stopped instances named {{ ec2_tag_Name }} in {{ ec2_region }}
        # Gather facts about all running ec2 instances with a tag of Name:Example
        ec2_remote_facts:
          region: "{{ ec2_region }}"
          filters:
            instance-state-name: stopped
            "tag:Name": "{{ec2_tag_Name}}"
        register: stopped_ec2

      - name: Starting instances
        local_action:
          module: ec2
          region: "{{ ec2_region }}"
          instance_tags:
              Name: "{{ec2_tag_Name}}"
              Type: "{{ec2_tag_Type}}"
              Environment: "{{ec2_tag_Environment}}"
          state: running
          instance_ids: '{{ item.id }}'
          wait: True
          vpc_subnet_id: "{{ ec2_subnet_ids|random }}"
          assign_public_ip: yes
        with_items:
          - "{{ stopped_ec2.instances }}"

      - name: Find all started instanced named {{ ec2_tag_Name }} in {{ ec2_region }}
        # Gather facts about all running ec2 instances with a tag of Name:Example
        ec2_remote_facts:
          region: "{{ ec2_region }}"
          filters:
            instance-state-name: running
            "tag:Name": "{{ec2_tag_Name}}"
        register: started_ec2

      - name: Add instance to host group for later use
        local_action: add_host hostname={{ item.public_dns_name }} groupname=launched
        with_items:
          - "{{ started_ec2.instances }}"

      - name: Write instances to host file
        local_action: lineinfile dest="./hosts" regexp="{{ item.public_ip_address }}" insertafter="[launched]" line="{{ item.public_ip_address }} ansible_ssh_pass="" ansible_ssh_user=ubuntu ansible_ssh_private_key_file=~/.ssh/{{ ec2_keypair }}.pem"
        with_items:
          - "{{ started_ec2.instances }}"

      - name: Add instance to IP-address file
        local_action: lineinfile dest="./ips" regexp="{{ item.public_ip_address }}" insertafter="[launched]" line="{{ item.public_ip_address }}"
        with_items:
          - "{{ started_ec2.instances }}"
