---
# Effectively lifted from the Ansible documentation on EC2:
# http://docs.ansible.com/ec2_module.html

  - name: Provision an EC2 node
    hosts: local
    connection: local
    gather_facts: False
    pre_tasks:
     - include_vars: "{{item}}"
       with_items:
         - vars/ec2.yml
         - vars/jupyter.yml
         - vars/deep_learning.yml

    tasks:
      - name: Create an EC2 key
        ec2_key:
          name: "{{ ec2_keypair }}"
          region: "{{ ec2_region }}"
        register: ec2_key

      - name: save private key
        copy:
          content: "{{ ec2_key.key.private_key }}"
          dest: "~/.ssh/{{ ec2_keypair }}.pem"
          mode: 0600
        when: ec2_key.changed

      - name: Launch new Instances
        local_action:
          module: ec2
          keypair: "{{ ec2_keypair }}"
          group: "{{ ec2_security_group }}"
          instance_type: "{{ ec2_instance_type }}"
          image: "{{ ec2_image }}"
          region: "{{ ec2_region }}"
          monitoring: yes
          vpc_subnet_id: "{{ ec2_subnet_ids|random }}"
          assign_public_ip: yes
          instance_tags: '{"Name":"{{ec2_tag_Name}}","Type":"{{ec2_tag_Type}}","Environment":"{{ec2_tag_Environment}}"}'
          wait: true
          count: "{{ ec2_amount }}"
          volumes:
          - device_name: /dev/sda1
            device_type: gp2
            volume_size: "{{ ec2_volume_size }}"
            delete_on_termination: true
        register: ec2


      - name: Add instance to host group for later use
        local_action: add_host hostname={{ item.public_dns_name }} groupname=launched
        with_items:
          - "{{ ec2.instances }}"

      - name: Write instances to host file
        local_action: lineinfile dest="./hosts" regexp="{{ item.public_ip }}" insertafter="[launched]" line="{{ item.public_ip }} ansible_ssh_pass="" ansible_ssh_user=ubuntu ansible_ssh_private_key_file=~/.ssh/{{ ec2_keypair }}.pem"
        with_items:
          - "{{ ec2.instances }}"

      - name: Add instance to IP-address file
        local_action: lineinfile dest="./ips" regexp="{{ item.public_ip }}" insertafter="[launched]" line="{{ item.public_ip }}"
        with_items:
          - "{{ ec2.instances }}"

      - name: Wait for SSH to come up
        local_action: wait_for host={{ item.public_ip }} port=22 delay=60 timeout=320 state=started
        with_items:
          - "{{ ec2.instances }}"
